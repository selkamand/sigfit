[{"path":[]},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://selkamand.github.io/sigfit/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://selkamand.github.io/sigfit/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to sigfit","title":"Contributing to sigfit","text":"outlines propose change sigfit. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://selkamand.github.io/sigfit/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to sigfit","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://selkamand.github.io/sigfit/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to sigfit","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://selkamand.github.io/sigfit/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to sigfit","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"selkamand/sigfit\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://selkamand.github.io/sigfit/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to sigfit","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://selkamand.github.io/sigfit/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to sigfit","text":"Please note sigfit project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://selkamand.github.io/sigfit/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 sigfit authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://selkamand.github.io/sigfit/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with sigfit","title":"Getting help with sigfit","text":"Thanks using sigfit! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://selkamand.github.io/sigfit/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with sigfit","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://selkamand.github.io/sigfit/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with sigfit","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://selkamand.github.io/sigfit/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with sigfit","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://selkamand.github.io/sigfit/articles/methods_of_signature_fitting.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Methods of Signature Fitting","text":"vignette detailed description signature fitting approaches implemented sigfit. quick summary method use, consult ?sig_fit().","code":""},{"path":"https://selkamand.github.io/sigfit/articles/methods_of_signature_fitting.html","id":"problem-statement","dir":"Articles","previous_headings":"Introduction","what":"Problem statement","title":"Methods of Signature Fitting","text":"issue ’re trying solve approaches optimally reconstruct observed mutation profile (counts different types mutations) using linear combinations known mutational signatures (proportions different types mutations) associated mutagenic aetiologies. plain words, want able say, observed mutation profile: ‘80% profile derived tobacco smoking, 20% damage reactive oxygen species’ - possible first place know mutational profile tobacco-smoking ROS damage look like isolation.","code":""},{"path":"https://selkamand.github.io/sigfit/articles/methods_of_signature_fitting.html","id":"common-matrix-representations","dir":"Articles","previous_headings":"Introduction","what":"Common Matrix Representations","title":"Methods of Signature Fitting","text":"defining individual signatures column vectors length K (K number mutation types). examples, ’ll using signatures 6 basic mutation types (C>, C>G, C>T, T>, T>C, T>G) $$ \\begin{array}{c}\\text{sig1} \\\\\\begin{bmatrix}P_{C>} \\\\P_{C>G} \\\\P_{C>T} \\\\P_{T>} \\\\P_{T>C} \\\\P_{T>G}\\end{bmatrix}\\end{array} \\\\~\\\\ \\quad P_{\\text{type}} = \\text{  proportion mutations mutation type} \\\\ \\sum P_{type}  = 1 \\\\ type \\\\{[C>], [C>G], [C>T], [T>], [T>C], [T>G]\\} \\text{ } $$","code":""},{"path":[]},{"path":"https://selkamand.github.io/sigfit/articles/methods_of_signature_fitting.html","id":"linear-algebra-approaches-solving-axb-for-x","dir":"Articles","previous_headings":"Methods","what":"Linear algebra approaches (Solving Ax=bAx=b for xx)","title":"Methods of Signature Fitting","text":"Say want explain observed mutational profile using collection 4 known signatures (6 different mutation types) One approach formulate problem system linear equations. framework, aim identify linear combination four signature vectors precisely reproduces observed mutational profile. coefficients linear equations represent number mutations attributed signature denoted Msig1,Msig2,Msig3 & Msig4\\text{M}_{sig1}, \\text{M}_{sig2}, \\text{M}_{sig3}\\text{ & }\\text{M}_{sig4}​. coefficients unknowns solve system. Msig1×sig1[PC>APC>GPC>TPT>APT>CPT>G]+Msig2×sig2[PC>APC>GPC>TPT>APT>CPT>G]+Msig3×sig3[PC>APC>GPC>TPT>APT>CPT>G]+Msig4×sig4[PC>APC>GPC>TPT>APT>CPT>G]=Observed Profile[CC>ACC>GCC>TCT>ACT>CCT>G] \\begin{array}{c}M_{\\text{sig1}} \\times \\begin{array}{c}\\text{sig1} \\\\\\begin{bmatrix}P_{C>} \\\\P_{C>G} \\\\P_{C>T} \\\\P_{T>} \\\\P_{T>C} \\\\P_{T>G}\\end{bmatrix}\\end{array}+ M_{\\text{sig2}} \\times \\begin{array}{c}\\text{sig2} \\\\\\begin{bmatrix}P_{C>} \\\\P_{C>G} \\\\P_{C>T} \\\\P_{T>} \\\\P_{T>C} \\\\P_{T>G}\\end{bmatrix}\\end{array}+ M_{\\text{sig3}} \\times \\begin{array}{c}\\text{sig3} \\\\\\begin{bmatrix}P_{C>} \\\\P_{C>G} \\\\P_{C>T} \\\\P_{T>} \\\\P_{T>C} \\\\P_{T>G}\\end{bmatrix}\\end{array}+ M_{\\text{sig4}} \\times \\begin{array}{c}\\text{sig4} \\\\\\begin{bmatrix}P_{C>} \\\\P_{C>G} \\\\P_{C>T} \\\\P_{T>} \\\\P_{T>C} \\\\P_{T>G}\\end{bmatrix}\\end{array}=\\begin{array}{c}\\text{Observed Profile} \\\\\\begin{bmatrix}C_{C>} \\\\C_{C>G} \\\\C_{C>T} \\\\C_{T>} \\\\C_{T>C} \\\\C_{T>G}\\end{bmatrix}\\end{array}\\end{array} $$ \\text{Note } P_{C>}\\text{ different value signature vector}\\\\ \\text{Observed Profile } C_{types} \\text{observed mutation counts} $$ problem framing equivalent solving set K simultaneous equations (case, 6 6 mutation types) $$ \\text{Given values P C, Solve } \\text{M}_{sig1}, \\text{M}_{sig2}, \\text{M}_{sig3}\\text{ & }\\text{M}_{sig4} \\text{:} \\\\~\\\\ \\begin{align*}M_{\\text{sig1}} \\times P_{C>}^{\\text{sig1}} + M_{\\text{sig2}} \\times P_{C>}^{\\text{sig2}} + M_{\\text{sig3}} \\times P_{C>}^{\\text{sig3}} + M_{\\text{sig4}} \\times P_{C>}^{\\text{sig4}} &= C_{C>} \\\\M_{\\text{sig1}} \\times P_{C>G}^{\\text{sig1}} + M_{\\text{sig2}} \\times P_{C>G}^{\\text{sig2}} + M_{\\text{sig3}} \\times P_{C>G}^{\\text{sig3}} + M_{\\text{sig4}} \\times P_{C>G}^{\\text{sig4}} &= C_{C>G} \\\\M_{\\text{sig1}} \\times P_{C>T}^{\\text{sig1}} + M_{\\text{sig2}} \\times P_{C>T}^{\\text{sig2}} + M_{\\text{sig3}} \\times P_{C>T}^{\\text{sig3}} + M_{\\text{sig4}} \\times P_{C>T}^{\\text{sig4}} &= C_{C>T} \\\\M_{\\text{sig1}} \\times P_{T>}^{\\text{sig1}} + M_{\\text{sig2}} \\times P_{T>}^{\\text{sig2}} + M_{\\text{sig3}} \\times P_{T>}^{\\text{sig3}} + M_{\\text{sig4}} \\times P_{T>}^{\\text{sig4}} &= C_{T>} \\\\M_{\\text{sig1}} \\times P_{T>C}^{\\text{sig1}} + M_{\\text{sig2}} \\times P_{T>C}^{\\text{sig2}} + M_{\\text{sig3}} \\times P_{T>C}^{\\text{sig3}} + M_{\\text{sig4}} \\times P_{T>C}^{\\text{sig4}} &= C_{T>C} \\\\M_{\\text{sig1}} \\times P_{T>G}^{\\text{sig1}} + M_{\\text{sig2}} \\times P_{T>G}^{\\text{sig2}} + M_{\\text{sig3}} \\times P_{T>G}^{\\text{sig3}} + M_{\\text{sig4}} \\times P_{T>G}^{\\text{sig4}} &= C_{T>G}\\end{align*} $$ solve M, first need represent problem Ax=bAx=b matrix form (tools expect). Ax=b form system linear equations: $$ \\begin{array}{c@{\\hskip 1cm}c@{\\hskip 1.5cm}c} \\underbrace{ \\begin{bmatrix} P_{C>}^{\\text{sig1}} & P_{C>}^{\\text{sig2}} & P_{C>}^{\\text{sig3}} & P_{C>}^{\\text{sig4}} \\\\ P_{C>G}^{\\text{sig1}} & P_{C>G}^{\\text{sig2}} & P_{C>G}^{\\text{sig3}} & P_{C>G}^{\\text{sig4}} \\\\ P_{C>T}^{\\text{sig1}} & P_{C>T}^{\\text{sig2}} & P_{C>T}^{\\text{sig3}} & P_{C>T}^{\\text{sig4}} \\\\ P_{T>}^{\\text{sig1}} & P_{T>}^{\\text{sig2}} & P_{T>}^{\\text{sig3}} & P_{T>}^{\\text{sig4}} \\\\ P_{T>C}^{\\text{sig1}} & P_{T>C}^{\\text{sig2}} & P_{T>C}^{\\text{sig3}} & P_{T>C}^{\\text{sig4}} \\\\ P_{T>G}^{\\text{sig1}} & P_{T>G}^{\\text{sig2}} & P_{T>G}^{\\text{sig3}} & P_{T>G}^{\\text{sig4}} \\\\ \\end{bmatrix}}_{} & \\underbrace{ \\begin{bmatrix} M_{\\text{sig1}} \\\\ M_{\\text{sig2}} \\\\ M_{\\text{sig3}} \\\\ M_{\\text{sig4}} \\\\ \\end{bmatrix}}_{x} = \\underbrace{ \\begin{bmatrix} C_{C>} \\\\ C_{C>G} \\\\ C_{C>T} \\\\ C_{T>} \\\\ C_{T>C} \\\\ C_{T>G} \\\\ \\end{bmatrix}}_{b} \\end{array} $$ NOTE: matrix representations linear equations new , recommend watching MIT OpenCourseWare Linear Algebra Course. problem Ax=bAx=b form can solve xx using several basic linear algebra approaches. appropriate method depends range matrix properties need support. Typically, QR decomposition based implementation base::qr.solve() good choice since works well rectangular matrices approximates solutions using least-squares appropriate (important dealing overdetermined & undertermined systems). However, one key constraint: x≥0x \\geq 0. reason lean towards following methods: Non-Negative Least Squares (NNLS): Suitable least-squares problems non-negativity constraints. nnls::nnls() Linear Programming (LP): Suitable optimizing linear objective function linear constraints. lpSolve::lp() Quadratic Programming (QP): Optimise quadratic minimisation functions linear constraints. quadprog::solve.QP() find xx minimises Frobenius norm Ax-b.","code":""},{"path":"https://selkamand.github.io/sigfit/articles/methods_of_signature_fitting.html","id":"a-note-on-overdetermined-and-underdetermined-systems","dir":"Articles","previous_headings":"Methods > Linear algebra approaches (Solving Ax=bAx=b for xx)","what":"A note on overdetermined and underdetermined systems","title":"Methods of Signature Fitting","text":"particular example Overdetermined System: equations (mutation types) unknowns (signatures). Overdetermined Systems solutions. See intuitive explanation . Approximate (least-squares) solutions can computed overdetermined systems. Use signature collections may lead Underdetermined Systems: occur fewer equations (mutation types) unknowns (signatures). Underdetermined systems typically solutions infinitely many solutions - enough constraints uniquely determine variables.","code":""},{"path":[]},{"path":[]},{"path":"https://selkamand.github.io/sigfit/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam El-Kamand. Author, maintainer.","code":""},{"path":"https://selkamand.github.io/sigfit/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"El-Kamand S (2024). sigfit: Package (One Line, Title Case). R package version 0.0.0.9000, https://selkamand.github.io/sigfit/, https://github.com/selkamand/sigfit.","code":"@Manual{,   title = {sigfit: What the Package Does (One Line, Title Case)},   author = {Sam El-Kamand},   year = {2024},   note = {R package version 0.0.0.9000, https://selkamand.github.io/sigfit/},   url = {https://github.com/selkamand/sigfit}, }"},{"path":"https://selkamand.github.io/sigfit/index.html","id":"sigfit","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"[!WARNING] package early development yet ready use sigfit R package implements common mutational signature fitting algorithms allow identify likely combination known mutational signatures explain mutational profile observed sample interest. [!TIP] Sigfit exclusively signature fitting tool. turnkey end--end signature analysis recommend sigscreen Unlike implementations, sigfit expects specific signature collection feature space. Users supply catalogue counts & matching signature collection, type signature analysis / feature space supported.","code":""},{"path":"https://selkamand.github.io/sigfit/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version sigfit like :","code":"if (!require(\"remotes\"))     install.packages(\"remotes\")  remotes::install_github(\"selkamand/sigfit\")"},{"path":"https://selkamand.github.io/sigfit/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"What the Package Does (One Line, Title Case)","text":"2 inputs required. observed mutation counts: named numeric vector names represent channels values represent counts signature collection: channel X signature matrix values represent fractions.","code":"library(sigfit)  catalogue <- c(channel1 = 20, channel2 = 104, channel3 = 10)  signatures <- matrix(   c(0, 0.9, 0.1, 0.98, 0.01, 0.01, 0.25, 0.5, 0.25),   nrow = 3L,   ncol = 3L,   dimnames = list(c(\"channel1\", \"channel2\", \"channel3\"), c(\"Sig1\", \"Sig2\", \"Sig3\")) )  sig_fit(catalogue, signatures, method = \"nnls\")"},{"path":"https://selkamand.github.io/sigfit/reference/sig_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Signature fitting — sig_fit","title":"Signature fitting — sig_fit","text":"Identify likely combination known mutational signatures explain mutational profile observed sample interest.","code":""},{"path":"https://selkamand.github.io/sigfit/reference/sig_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signature fitting — sig_fit","text":"","code":"sig_fit(catalogue, signatures, method = \"nnls\")"},{"path":"https://selkamand.github.io/sigfit/reference/sig_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signature fitting — sig_fit","text":"catalogue catalogue mutations observed sample. named vector names channel values counts. signatures channel X signature matrix values represent fractional contributions channels. method fitting performed. nnls: Use non-negative least squares method","code":""},{"path":"https://selkamand.github.io/sigfit/reference/sig_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signature fitting — sig_fit","text":"named vector 1 element per signature. Values indicate estimated number mutation drawn signature.","code":""},{"path":"https://selkamand.github.io/sigfit/reference/sig_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Signature fitting — sig_fit","text":"","code":"observed_counts <- c( \"C>A\" = 183, \"C>G\" = 779, \"C>T\" = 588, \"T>A\" = 706, \"T>C\" = 384, \"T>G\" = 127 )  signatures <- simulate_signature_matrix(   signatures = c(\"sig1\", \"sig2\", \"sig3\", \"sig4\"),   channels = c(\"C>A\", \"C>G\", \"C>T\", \"T>A\", \"T>C\", \"T>G\"),   seed=1 )   # fitting using nnls method sig_fit(observed_counts, signatures, method = \"nnls\") #> Error in sig_fit(observed_counts, signatures, method = \"nnls\"): The package \"nnls\" is required to fit signatures to data when method = #> nnls"},{"path":"https://selkamand.github.io/sigfit/reference/simulate_signature_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Signature Matrix — simulate_signature_matrix","title":"Simulate a Signature Matrix — simulate_signature_matrix","text":"function simulates matrix column corresponds signature, entry matrix random proportion set channels. proportions column sum 1.","code":""},{"path":"https://selkamand.github.io/sigfit/reference/simulate_signature_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Signature Matrix — simulate_signature_matrix","text":"","code":"simulate_signature_matrix(signatures, channels, digits = 2, seed = NULL)"},{"path":"https://selkamand.github.io/sigfit/reference/simulate_signature_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Signature Matrix — simulate_signature_matrix","text":"signatures vector signature names used column names resulting matrix. channels vector channel names used row names resulting matrix. digits Integer value indicating number decimal places proportions rounded. Default 2. seed optional seed value reproducibility. Default NULL, meaning seed set.","code":""},{"path":"https://selkamand.github.io/sigfit/reference/simulate_signature_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Signature Matrix — simulate_signature_matrix","text":"matrix rows represent channels columns represent signatures. entry randomly generated proportion, values column sum 1.","code":""},{"path":"https://selkamand.github.io/sigfit/reference/simulate_signature_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a Signature Matrix — simulate_signature_matrix","text":"","code":"signatures <- c(\"Signature1\", \"Signature2\", \"Signature3\") channels <- c(\"Channel1\", \"Channel2\", \"Channel3\") simulate_signature_matrix(signatures, channels, digits = 2, seed = 123) #>          Signature1 Signature2 Signature3 #> Channel1       0.19       0.47       0.27 #> Channel2       0.53       0.50       0.45 #> Channel3       0.28       0.02       0.28"}]
